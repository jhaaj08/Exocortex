# Generated by Django 4.2.7 on 2025-07-26 05:39

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('flashcards', '0003_pdfdocument_cleaned_text_pdfdocument_word_count_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='pdfdocument',
            name='concepts_analyzed',
            field=models.BooleanField(default=False, help_text='Whether concept analysis has been completed'),
        ),
        migrations.CreateModel(
            name='ConceptUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Auto-generated concept title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Brief description of the concept')),
                ('primary_labels', models.JSONField(default=list, help_text='Main concept labels for this unit')),
                ('concept_order', models.IntegerField(help_text='Order of this concept in the document')),
                ('word_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_units', to='flashcards.pdfdocument')),
            ],
            options={
                'ordering': ['pdf_document', 'concept_order'],
                'unique_together': {('pdf_document', 'concept_order')},
            },
        ),
        migrations.CreateModel(
            name='ChunkLabel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('primary_label', models.CharField(choices=[('Definition', 'Definition'), ('Intuition', 'Intuition'), ('Example', 'Example'), ('Procedure', 'Procedure'), ('Algorithm', 'Algorithm'), ('Derivation', 'Derivation'), ('Proof', 'Proof'), ('Statement', 'Statement'), ('Theorem', 'Theorem'), ('Lemma', 'Lemma'), ('Assumption', 'Assumption'), ('Property', 'Property'), ('Discussion', 'Discussion'), ('Contrast', 'Contrast'), ('Warning', 'Warning'), ('NewTopic', 'NewTopic'), ('Recap', 'Recap'), ('WrapUp', 'WrapUp'), ('DataSpec', 'DataSpec'), ('Code', 'Code'), ('Pseudocode', 'Pseudocode'), ('FigureCaption', 'FigureCaption'), ('Exercise', 'Exercise'), ('ProblemStatement', 'ProblemStatement'), ('Introduction', 'Introduction'), ('Conclusion', 'Conclusion'), ('Summary', 'Summary'), ('Background', 'Background'), ('Methodology', 'Methodology'), ('Results', 'Results'), ('Analysis', 'Analysis'), ('Interpretation', 'Interpretation'), ('Application', 'Application'), ('Limitation', 'Limitation'), ('FutureWork', 'FutureWork'), ('Related', 'Related'), ('Comparison', 'Comparison'), ('Classification', 'Classification'), ('Explanation', 'Explanation'), ('Elaboration', 'Elaboration'), ('Other', 'Other')], help_text='Primary concept label', max_length=50)),
                ('secondary_labels', models.JSONField(default=list, help_text='Additional relevant labels')),
                ('confidence_score', models.FloatField(default=0.0, help_text='LLM confidence in labeling (0-1)')),
                ('reasoning', models.TextField(blank=True, help_text='LLM explanation for the labeling')),
                ('concept_keywords', models.JSONField(default=list, help_text='Key concepts extracted from this chunk')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('concept_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chunk_labels', to='flashcards.conceptunit')),
                ('text_chunk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chunk_label', to='flashcards.textchunk')),
            ],
            options={
                'ordering': ['text_chunk__chunk_order'],
            },
        ),
        migrations.AddField(
            model_name='flashcard',
            name='concept_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='flashcards.conceptunit'),
        ),
    ]
